//! > Comparison with false

//! > cairo_code
fn main() {
    let x = true;
    if x == false {
        println!("x is false");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Unnecessary comparison with a boolean value. Use the variable directly.
 --> lib.cairo:4:8
  |
4 |     if x == false {
  |        ----------
  |

//! > fixed
fn main() {
    let x = true;
    if x == false {
        println!("x is false");
    }
}

//! > ==========================================================================

//! > Comparison with true

//! > cairo_code
fn main() {
    let x = true;
    if x == true {
        println!("x is true");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Unnecessary comparison with a boolean value. Use the variable directly.
 --> lib.cairo:4:8
  |
4 |     if x == true {
  |        ---------
  |

//! > fixed
fn main() {
    let x = true;
    if x == true {
        println!("x is true");
    }
}

//! > ==========================================================================

//! > Negated comparison with false

//! > cairo_code
fn main() {
    let x = true;
    if x != false {
        println!("x is not false");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Unnecessary comparison with a boolean value. Use the variable directly.
 --> lib.cairo:4:8
  |
4 |     if x != false {
  |        ----------
  |

//! > fixed
fn main() {
    let x = true;
    if x != false {
        println!("x is not false");
    }
}

//! > ==========================================================================

//! > Negated comparison with true

//! > cairo_code
fn main() {
    let x = true;
    if x != true {
        println!("x is not true");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Unnecessary comparison with a boolean value. Use the variable directly.
 --> lib.cairo:4:8
  |
4 |     if x != true {
  |        ---------
  |

//! > fixed
fn main() {
    let x = true;
    if x != true {
        println!("x is not true");
    }
}
