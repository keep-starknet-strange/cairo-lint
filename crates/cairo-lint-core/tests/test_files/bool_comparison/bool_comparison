//! > Comparison with false

//! > cairo_code
fn main() {
    let x = true;
    if x == false {
        println!("x is false");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Unnecessary comparison with a boolean value. Use the variable directly.
 --> lib.cairo:3:8
  |
3 |     if x == false {
  |        ----------
  |

//! > fixed
fn main() {
    let x = true;
    if !x {
        println!("x is false");
    }
}

//! > ==========================================================================

//! > Comparison with false allowed

//! > cairo_code
fn main() {
    let x = true;
    #[allow(bool_comparison)]
    if x == false {
        println!("x is false");
    }
}

//! > diagnostics

//! > fixed
fn main() {
    let x = true;
    #[allow(bool_comparison)]
    if x == false {
        println!("x is false");
    }
}

//! > ==========================================================================

//! > Comparison with false on LHS

//! > cairo_code
fn main() {
    let x = true;
    if false == x {
        println!("x is false");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Unnecessary comparison with a boolean value. Use the variable directly.
 --> lib.cairo:3:8
  |
3 |     if false == x {
  |        ----------
  |

//! > fixed
fn main() {
    let x = true;
    if !x {
        println!("x is false");
    }
}

//! > ==========================================================================

//! > Comparison with true

//! > cairo_code
fn main() {
    let x = true;
    if x == true {
        println!("x is true");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Unnecessary comparison with a boolean value. Use the variable directly.
 --> lib.cairo:3:8
  |
3 |     if x == true {
  |        ---------
  |

//! > fixed
fn main() {
    let x = true;
    if x {
        println!("x is true");
    }
}

//! > ==========================================================================

//! > Comparison with true on LHS

//! > cairo_code
fn main() {
    let x = true;
    if true == x {
        println!("x is true");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Unnecessary comparison with a boolean value. Use the variable directly.
 --> lib.cairo:3:8
  |
3 |     if true == x {
  |        ---------
  |

//! > fixed
fn main() {
    let x = true;
    if x {
        println!("x is true");
    }
}

//! > ==========================================================================

//! > Negated comparison with false

//! > cairo_code
fn main() {
    let x = true;
    if x != false {
        println!("x is not false");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Unnecessary comparison with a boolean value. Use the variable directly.
 --> lib.cairo:3:8
  |
3 |     if x != false {
  |        ----------
  |

//! > fixed
fn main() {
    let x = true;
    if !x {
        println!("x is not false");
    }
}

//! > ==========================================================================

//! > Negated comparison with false on LHS

//! > cairo_code
fn main() {
    let x = true;
    if false != x {
        println!("x is not false");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Unnecessary comparison with a boolean value. Use the variable directly.
 --> lib.cairo:3:8
  |
3 |     if false != x {
  |        ----------
  |

//! > fixed
fn main() {
    let x = true;
    if !x {
        println!("x is not false");
    }
}

//! > ==========================================================================

//! > Negated comparison with true

//! > cairo_code
fn main() {
    let x = true;
    if x != true {
        println!("x is not true");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Unnecessary comparison with a boolean value. Use the variable directly.
 --> lib.cairo:3:8
  |
3 |     if x != true {
  |        ---------
  |

//! > fixed
fn main() {
    let x = true;
    if !x {
        println!("x is not true");
    }
}

//! > ==========================================================================

//! > Negated comparison with true on LHS

//! > cairo_code
fn main() {
    let x = true;
    if true != x {
        println!("x is not true");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Unnecessary comparison with a boolean value. Use the variable directly.
 --> lib.cairo:3:8
  |
3 |     if true != x {
  |        ---------
  |

//! > fixed
fn main() {
    let x = true;
    if !x {
        println!("x is not true");
    }
}
