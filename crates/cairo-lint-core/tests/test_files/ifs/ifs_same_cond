//! > Combined conditions with different if

//! > cairo_code
fn main() {
    let x:u32 = 5;
    let y:u32 = 10;
    let z:u32 = 5;

    if x == z {
        println!("x is equal to z");
    } else if x == z {
        println!("x is still equal to z");
    } else if x + 5 == y {
        println!("x plus 5 is equal to y");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Consecutive `if` with the same condition found.
  --> lib.cairo:10:5
   |
10 |       if x == z {
   |  _____-
11 | |         println!("x is equal to z");
...  |
15 | |         println!("x plus 5 is equal to y");
16 | |     }
   | |_____-
   |

//! > fixed
fn main() {
    let x:u32 = 5;
    let y:u32 = 10;
    let z:u32 = 5;

    if x == z {
        println!("x is equal to z");
    } else if x == z {
        println!("x is still equal to z");
    } else if x + 5 == y {
        println!("x plus 5 is equal to y");
    }
}

//! > ==========================================================================

//! > Greater lesser comparison

//! > cairo_code
fn main(){
    let a:u32 = 3;

    if a > 3 {
        println!("a == 3");
    } else if a > 3 {
        println!("3 == a");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Consecutive `if` with the same condition found.
  --> lib.cairo:6:5
   |
 6 |       if a > 3 {
   |  _____-
 7 | |         println!("a == 3");
 8 | |     } else if a > 3 {
 9 | |         println!("3 == a");
10 | |     }
   | |_____-
   |

//! > fixed
fn main(){
    let a:u32 = 3;

    if a > 3 {
        println!("a == 3");
    } else if a > 3 {
        println!("3 == a");
    }
}

//! > ==========================================================================

//! > Same condition with boolean

//! > cairo_code
fn main() {
    let condition = true;

    if condition {
        println!("Condition is true");
    } else if condition {
        println!("Condition is still true");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Consecutive `if` with the same condition found.
  --> lib.cairo:6:5
   |
 6 |       if condition {
   |  _____-
 7 | |         println!("Condition is true");
 8 | |     } else if condition {
 9 | |         println!("Condition is still true");
10 | |     }
   | |_____-
   |

//! > fixed
fn main() {
    let condition = true;

    if condition {
        println!("Condition is true");
    } else if condition {
        println!("Condition is still true");
    }
}

//! > ==========================================================================

//! > Same condition with else

//! > cairo_code
fn main() {
    let a = 1;
    let b = 1;
    if a == b {
        println!("a is equal to b");
    } else if a == b {
        println!("a is equal to b");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Consecutive `if` with the same condition found.
  --> lib.cairo:6:5
   |
 6 |       if a == b {
   |  _____-
 7 | |         println!("a is equal to b");
 8 | |     } else if a == b {
 9 | |         println!("a is equal to b");
10 | |     }
   | |_____-
   |

//! > fixed
fn main() {
    let a = 1;
    let b = 1;
    if a == b {
        println!("a is equal to b");
    } else if a == b {
        println!("a is equal to b");
    }
}

//! > ==========================================================================

//! > Same condition with felt252

//! > cairo_code
fn main(){
    let str1:felt252 = 'hello';
    let str2:felt252 = 'hello';

    if str1 == str2 {
        println!("Strings are equal");
    } else if str1 == str2 {
        println!("Strings are still equal");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Consecutive `if` with the same condition found.
  --> lib.cairo:8:5
   |
 8 |       if str1 == str2 {
   |  _____-
 9 | |         println!("Strings are equal");
10 | |     } else if str1 == str2 {
11 | |         println!("Strings are still equal");
12 | |     }
   | |_____-
   |

//! > fixed
fn main(){
    let str1:felt252 = 'hello';
    let str2:felt252 = 'hello';

    if str1 == str2 {
        println!("Strings are equal");
    } else if str1 == str2 {
        println!("Strings are still equal");
    }
}

//! > ==========================================================================

//! > Same condition with multiple if else

//! > cairo_code
fn main(){
    let str1:felt252 = 'hello';
    let str2:felt252 = 'hello';

    if str1 == str2 {
        println!("Strings are equal");
    } else if str1 == str2 {
        println!("Strings are still equal");
    } else if str1 == str2 {
        println!("Strings are still equal");
    } else if str1 == str2 {
        println!("Strings are still equal");
    } 
    else if str1 == str2 {
        println!("Strings are still equal");
    } 
}

//! > diagnostics
warning: Plugin diagnostic: Consecutive `if` with the same condition found.
  --> lib.cairo:8:5
   |
 8 |       if str1 == str2 {
   |  _____-
 9 | |         println!("Strings are equal");
...  |
18 | |         println!("Strings are still equal");
19 | |     } 
   | |_____-
   |
warning: Plugin diagnostic: Consecutive `if` with the same condition found.
  --> lib.cairo:12:12
   |
12 |       } else if str1 == str2 {
   |  ____________-
13 | |         println!("Strings are still equal");
...  |
20 | |         println!("Strings are still equal");
21 | |     } 
   | |_____-
   |
warning: Plugin diagnostic: Consecutive `if` with the same condition found.
  --> lib.cairo:16:12
   |
16 |       } else if str1 == str2 {
   |  ____________-
17 | |         println!("Strings are still equal");
...  |
22 | |         println!("Strings are still equal");
23 | |     } 
   | |_____-
   |
warning: Plugin diagnostic: Consecutive `if` with the same condition found.
  --> lib.cairo:20:12
   |
20 |       } else if str1 == str2 {
   |  ____________-
21 | |         println!("Strings are still equal");
...  |
24 | |         println!("Strings are still equal");
25 | |     } 
   | |_____-
   |

//! > fixed
fn main(){
    let str1:felt252 = 'hello';
    let str2:felt252 = 'hello';

    if str1 == str2 {
        println!("Strings are equal");
    } else if str1 == str2 {
        println!("Strings are still equal");
    } else if str1 == str2 {
        println!("Strings are still equal");
    } else if str1 == str2 {
        println!("Strings are still equal");
    } 
    else if str1 == str2 {
        println!("Strings are still equal");
    } 
}

//! > ==========================================================================

//! > Same condition with struct

//! > cairo_code
struct Point {
    x: i32,
    y: i32,
}

fn main() {
    let p1 = Point { x: 3, y: 4 };
    let p2 = Point { x: 3, y: 4 };

    if p1.x == p2.x && p1.y == p2.y {
        println!("Points are equal");
    } else if p1.x == p2.x && p1.y == p2.y {
        println!("Points are still equal");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Consecutive `if` with the same condition found.
  --> lib.cairo:18:5
   |
18 |       if p1.x == p2.x && p1.y == p2.y {
   |  _____-
19 | |         println!("Points are equal");
20 | |     } else if p1.x == p2.x && p1.y == p2.y {
21 | |         println!("Points are still equal");
22 | |     }
   | |_____-
   |

//! > fixed
struct Point {
    x: i32,
    y: i32,
}

fn main() {
    let p1 = Point { x: 3, y: 4 };
    let p2 = Point { x: 3, y: 4 };

    if p1.x == p2.x && p1.y == p2.y {
        println!("Points are equal");
    } else if p1.x == p2.x && p1.y == p2.y {
        println!("Points are still equal");
    }
}

//! > ==========================================================================

//! > Same conditions with literals

//! > cairo_code
fn main(){

    if 2 == 3 {
        println!("a == 3");
    } else if 2 == 3 {
        println!("a == 3");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Consecutive `if` with the same condition found.
 --> lib.cairo:4:5
  |
4 |       if 2 == 3 {
  |  _____-
5 | |         println!("a == 3");
6 | |     } else if 2 == 3 {
7 | |         println!("a == 3");
8 | |     }
  | |_____-
  |

//! > fixed
fn main(){

    if 2 == 3 {
        println!("a == 3");
    } else if 2 == 3 {
        println!("a == 3");
    }
}

//! > ==========================================================================

//! > Same conditions with literals and vars

//! > cairo_code
fn main(){
    let a = 3;

    if a == 3 {
        println!("a == 3");
    } else if a == 3 {
        println!("a == 3");
    }
}

//! > diagnostics
warning: Plugin diagnostic: Consecutive `if` with the same condition found.
  --> lib.cairo:6:5
   |
 6 |       if a == 3 {
   |  _____-
 7 | |         println!("a == 3");
 8 | |     } else if a == 3 {
 9 | |         println!("a == 3");
10 | |     }
   | |_____-
   |

//! > fixed
fn main(){
    let a = 3;

    if a == 3 {
        println!("a == 3");
    } else if a == 3 {
        println!("a == 3");
    }
}

//! > ==========================================================================

//! > Similar conditions

//! > cairo_code
fn main() {
    let a:u32 = 1;
    let b:u32 = 2;

    if a == b {
        println!("a is equal to b");
    } else if a < b {
        println!("a is less than b");
    } else if a > b {
        println!("a is greater than b");
    }
}

//! > diagnostics

//! > fixed
fn main() {
    let a:u32 = 1;
    let b:u32 = 2;

    if a == b {
        println!("a is equal to b");
    } else if a < b {
        println!("a is less than b");
    } else if a > b {
        println!("a is greater than b");
    }
}

//! > ==========================================================================

//! > if with functions

//! > cairo_code
fn foo() -> bool{
        println!("foo");
        true
    }

fn main(){
   if foo() {
        println!("foo");
    } else if foo() { 
        println!("foo");
    }
}

//! > diagnostics

//! > fixed
fn foo() -> bool{
        println!("foo");
        true
    }

fn main(){
   if foo() {
        println!("foo");
    } else if foo() { 
        println!("foo");
    }
}
