//! > In a loop

//! > cairo_code
fn main() {
    for i in 0..10_u8 {
        let y = i & 1;
        println!("{}", y);
    }
}

//! > diagnostics
warning: Plugin diagnostic: You seem to be trying to use `&` for parity check. Consider using `DivRem::div_rem()` instead.
 --> lib.cairo:3:17
  |
3 |         let y = i & 1;
  |                 -----
  |

//! > fixed
fn main() {
    for i in 0..10_u8 {
        let y = i & 1;
        println!("{}", y);
    }
}

//! > ==========================================================================

//! > with conditional logic

//! > cairo_code
fn main() {
    let x = 17_u32;
    if (x & 1) == 1 {
        println!("Odd number");
    } else {
        println!("Even number");
    }
}

//! > diagnostics
warning: Plugin diagnostic: You seem to be trying to use `&` for parity check. Consider using `DivRem::div_rem()` instead.
 --> lib.cairo:3:9
  |
3 |     if (x & 1) == 1 {
  |         -----
  |

//! > fixed
fn main() {
    let x = 17_u32;
    if (x & 1) == 1 {
        println!("Odd number");
    } else {
        println!("Even number");
    }
}

//! > ==========================================================================

//! > with conditional logic allowed

//! > cairo_code
fn main() {
    let x = 17_u32;
    #[allow(bitwise_for_parity_check)]
    if (x & 1) == 1 {
        println!("Odd number");
    } else {
        println!("Even number");
    }
}

//! > diagnostics

//! > fixed
fn main() {
    let x = 17_u32;
    #[allow(bitwise_for_parity_check)]
    if (x & 1) == 1 {
        println!("Odd number");
    } else {
        println!("Even number");
    }
}

//! > ==========================================================================

//! > with multiple variables

//! > cairo_code
fn main() {
    let x = 150_u32;
    let y = 47;
    let _result = (x & 1) + (y & 1);
}

//! > diagnostics
warning: Plugin diagnostic: You seem to be trying to use `&` for parity check. Consider using `DivRem::div_rem()` instead.
 --> lib.cairo:4:20
  |
4 |     let _result = (x & 1) + (y & 1);
  |                    -----
  |
warning: Plugin diagnostic: You seem to be trying to use `&` for parity check. Consider using `DivRem::div_rem()` instead.
 --> lib.cairo:4:30
  |
4 |     let _result = (x & 1) + (y & 1);
  |                              -----
  |

//! > fixed
fn main() {
    let x = 150_u32;
    let y = 47;
    let _result = (x & 1) + (y & 1);
}

//! > ==========================================================================

//! > with multiple variables allowed

//! > cairo_code
fn main() {
    let x = 150_u32;
    let y = 47;
	#[allow(bitwise_for_parity_check)]
    let _result = (x & 1) + (y & 1);
}

//! > diagnostics

//! > fixed
fn main() {
    let x = 150_u32;
    let y = 47;
	#[allow(bitwise_for_parity_check)]
    let _result = (x & 1) + (y & 1);
}

//! > ==========================================================================

//! > with single variable

//! > cairo_code
fn main() {
    let _a = 200_u32 & 1;
}

//! > diagnostics
warning: Plugin diagnostic: You seem to be trying to use `&` for parity check. Consider using `DivRem::div_rem()` instead.
 --> lib.cairo:2:14
  |
2 |     let _a = 200_u32 & 1;
  |              -----------
  |

//! > fixed
fn main() {
    let _a = 200_u32 & 1;
}
